@@
-#include <chrono>
+#include <chrono>
+#include <thread>
@@
-void log_sp_error(const char* where, int rc) {
-    const char* msg = sp_last_error_message();
-    std::cerr << "[SP ERROR] " << where << " rc=" << rc << ": " << (msg ? msg : "Unknown error") << "\n";
-    if (msg) {
-        sp_free_error_message(msg);
-    }
-}
+void log_sp_error(const char* where, int rc) {
+    char* raw = sp_last_error_message();                       // libserialport returns malloc'ed char*
+    std::string msg = raw ? std::string(raw) : "Unknown error";
+    std::cerr << "[SP ERROR] " << where << " rc=" << rc << ": " << msg << "\n";
+    if (raw) {
+        sp_free_error_message(raw);                            // expects char*, not const char*
+    }
+}
@@
-            std::this_thread::sleep_for(std::chrono::milliseconds(2));
+            std::this_thread::sleep_for(std::chrono::milliseconds(2));

